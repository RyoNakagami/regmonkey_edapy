name: Release workflow with git-tag
on:
  pull_request:
    branches:
      - main
    types:
      - closed

jobs:
  release:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - name: Checkout main branch
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0
      - name: Install Python
        uses: actions/setup-python@v5
        with: 
          python-version: 3.12
      - name: Install poetry
        uses: abatilo/actions-poetry@v2
      - uses: actions/cache@v3
        name: Define a cache for the virtual environment based on the dependencies lock file
        with:
          path: ./.venv
          key: venv-${{ hashFiles('poetry.lock') }}
      - name: Install the project dependencies
        run: poetry install
      - name: Fetch version info from pyproject.toml
        run: |
          LATEST_VERSION=$(poetry run python3 -c "from importlib.metadata import version; print(version('regmonkey_edapy'))")
          if [ -n "$LATEST_VERSION" ]; then
            GITTAG="v"$LATEST_VERSION"
            gh release create $GITTAG --generate-notes
          fi
        with:
          token: ${{ secrets.regmonkey_edapy_development}}
